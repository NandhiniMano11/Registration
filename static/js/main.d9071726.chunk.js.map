{"version":3,"sources":["containers/CountryCode.jsx","containers/Form.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CountryCode","value","label","phone","state","Form","withFormik","mapPropsToValues","_ref","userName","firstName","lastName","address1","address2","country","pincode","password","confirmPassword","profileimg","validationSchema","Yup","object","shape","string","required","min","oneOf","ref","mixed","handleSubmit","values","_ref2","setSubmitting","setTimeout","alert","JSON","stringify","props","classes","touched","errors","isSubmitting","handleChange","handleBlur","handleReset","react_default","a","createElement","className","container","onSubmit","Card_default","card","CardContent_default","index_es","component","variant","TextField_default","id","onChange","onBlur","helperText","error","Boolean","margin","fullWidth","select","console","log","map","option","MenuItem_default","key","find","item","type","InputProps","disableUnderline","accept","CardActions_default","actions","Button_default","color","disabled","onClick","withStyles","maxWidth","marginTop","display","justifyContent","float","App","containers_Form","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yXAAaA,EAAc,CACzB,CACEC,MAAO,UAAWC,MAAO,UAAWC,MAAO,MAAOC,MAAO,CACvD,CAAEF,MAAO,mBAAoBD,MAAO,oBACpC,CAAEC,MAAO,SAAUD,MAAO,UAC1B,CAAEC,MAAO,YAAaD,MAAO,aAC7B,CAAEC,MAAO,SAAUD,MAAO,UAC1B,CAAEC,MAAO,UAAWD,MAAO,WAC3B,CAAEC,MAAO,iBAAkBD,MAAO,kBAClC,CAAEC,MAAO,qBAAsBD,MAAO,wBAG1C,CACEA,MAAO,qBAAsBC,MAAO,qBAAsBC,MAAO,MACjEC,MAAO,CACL,CAAEF,MAAO,QAASD,MAAO,SACzB,CAAEC,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,UAAWD,MAAO,WAC3B,CAAEC,MAAO,QAASD,MAAO,SACzB,CAAEC,MAAO,eAAgBD,MAAO,gBAChC,CAAEC,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,cAAeD,MAAO,iBAGnC,CACEA,MAAO,cAAeC,MAAO,cAAeC,MAAO,KACnDC,MAAO,CACL,CAAEF,MAAO,mBAAoBD,MAAO,oBACpC,CAAEC,MAAO,SAAUD,MAAO,UAC1B,CAAEC,MAAO,YAAaD,MAAO,aAC7B,CAAEC,MAAO,SAAUD,MAAO,UAC1B,CAAEC,MAAO,UAAWD,MAAO,WAC3B,CAAEC,MAAO,iBAAkBD,MAAO,kBAClC,CAAEC,MAAO,qBAAsBD,MAAO,wBAG1C,CACEA,MAAO,oBAAqBC,MAAO,oBAAqBC,MAAO,QAC/DC,MAAO,CACL,CAAEF,MAAO,QAASD,MAAO,SACzB,CAAEC,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,UAAWD,MAAO,WAC3B,CAAEC,MAAO,QAASD,MAAO,SACzB,CAAEC,MAAO,eAAgBD,MAAO,gBAChC,CAAEC,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,cAAeD,MAAO,kBCyK/BI,EAAOC,YAAW,CACtBC,iBAAkB,SAAAC,GAchB,MAAO,CACLC,SAFJD,EAZEC,UAcwB,GACtBC,UAHJF,EAXEE,WAc0B,GACxBC,SAJJH,EAVEG,UAcwB,GACtBC,SALJJ,EATEI,UAcwB,GACtBC,SANJL,EAREK,UAcwB,GACtBC,QAPJN,EAPEM,SAcsB,GACpBV,MARJI,EANEJ,OAckB,GAChBW,QATJP,EALEO,SAcsB,GACpBC,SAVJR,EAJEQ,UAcwB,GACtBC,gBAXJT,EAHES,iBAcsC,GACpCC,WAZJV,EAFEU,YAc4B,KAI9BC,iBAAkBC,IAAIC,SAASC,MAAM,CACnCb,SAAUW,IAAIG,SAASC,SAAS,YAChCd,UAAWU,IAAIG,SAASC,SAAS,YACjCb,SAAUS,IAAIG,SAASC,SAAS,YAChCZ,SAAUQ,IAAIG,SAASC,SAAS,YAChCX,SAAUO,IAAIG,SAASC,SAAS,YAChCV,QAASM,IAAIG,SAASC,SAAS,wBAC/BpB,MAAOgB,IAAIG,SAASC,SAAS,sBAC7BT,QAASK,IAAIG,SACVE,IAAI,EAAG,8CACPD,SAAS,sBACZR,SAAUI,IAAIG,SACXE,IAAI,EAAG,+CACPD,SAAS,uBACZP,gBAAiBG,IAAIG,SAClBC,SAAS,yBACTE,MAAM,CAACN,IAAIO,IAAI,aAAc,2BAChCT,WAAYE,IAAIQ,QAAQJ,aAI1BK,aAAc,SAACC,EAADC,GACd,IADyBC,EACzBD,EADyBC,cAEvBC,WAAW,WAGTC,MAAMC,KAAKC,UAAUN,EAAQ,KAAM,IACnCE,GAAc,IACb,OA1DM1B,CA1LA,SAAA+B,GACb,IAEIC,EASED,EATFC,QACAR,EAQEO,EARFP,OACAS,EAOEF,EAPFE,QACAC,EAMEH,EANFG,OACAC,EAKEJ,EALFI,aACAC,EAIEL,EAJFK,aACAC,EAGEN,EAHFM,WACAd,EAEEQ,EAFFR,aACAe,EACEP,EADFO,YAGF,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWV,EAAQW,WACtBJ,EAAAC,EAAAC,cAAA,QAAMG,SAAUrB,GACdgB,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAME,UAAWV,EAAQc,MACvBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,KAEED,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,wBAEAX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,WACHxD,MAAM,YACND,MAAO6B,EAAOrB,SACdkD,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQ9B,SAAW+B,EAAO/B,SAAW,GACjDqD,MAAOvB,EAAQ9B,UAAYsD,QAAQvB,EAAO/B,UAC1CuD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAEXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,YACHxD,MAAM,aACND,MAAO6B,EAAOpB,UACdiD,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQ7B,UAAY8B,EAAO9B,UAAY,GACnDoD,MAAOvB,EAAQ7B,WAAaqD,QAAQvB,EAAO9B,WAC3CsD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAEXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,WACHxD,MAAM,YACND,MAAO6B,EAAOnB,SACdgD,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQ5B,SAAW6B,EAAO7B,SAAW,GACjDmD,MAAOvB,EAAQ5B,UAAYoD,QAAQvB,EAAO7B,UAC1CqD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAEXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,WACHxD,MAAM,iBACND,MAAO6B,EAAOlB,SACd+C,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQ3B,SAAW4B,EAAO5B,SAAW,GACjDkD,MAAOvB,EAAQ3B,UAAYmD,QAAQvB,EAAO5B,UAC1CoD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAEXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,WACHxD,MAAM,gBACND,MAAO6B,EAAOjB,SACd8C,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQ1B,SAAW2B,EAAO3B,SAAW,GACjDiD,MAAOvB,EAAQ1B,UAAYkD,QAAQvB,EAAO3B,UAC1CmD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAGXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEoB,QAAM,EACNR,GAAG,UACHxD,MAAM,UACND,MAAO6B,EAAOhB,QACd6C,SAAUjB,EAAa,WACvBmB,WAAYtB,EAAQzB,QAAU0B,EAAO1B,QAAU,GAC/CgD,MAAOvB,EAAQzB,SAAWiD,QAAQvB,EAAO1B,SACzCkD,OAAO,QACPR,QAAQ,WACRS,WAAS,GAERE,QAAQC,IAAItC,EAAOhB,SACnBd,EAAYqE,IAAI,SAAAC,GAAM,OACrBzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAU0B,IAAKF,EAAOrE,MAAOA,MAAOqE,EAAOrE,OACxCqE,EAAOpE,UAId2C,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEoB,QAAM,EACNR,GAAG,QACHxD,MAAM,QACND,MAAO6B,EAAO1B,MACduD,SAAUjB,EAAa,SACvBmB,WAAYtB,EAAQnC,MAAQoC,EAAOpC,MAAQ,GAC3C0D,MAAOvB,EAAQnC,OAAS2D,QAAQvB,EAAOpC,OACvC4D,OAAO,QACPR,QAAQ,WACRS,WAAS,GAERnC,EAAOhB,SAA8B,KAAnBgB,EAAOhB,SAAkBd,EAAYyE,KAAK,SAACC,GAAD,OAAUA,EAAKzE,QAAU6B,EAAOhB,UAASV,MAAMiE,IAAI,SAAAC,GAAM,OACpHzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAU0B,IAAKF,EAAOrE,MAAOA,MAAOqE,EAAOrE,OACxCqE,EAAOpE,UAId2C,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,UACHxD,MAAM,UACND,MAAO6B,EAAOf,QACd4C,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQxB,QAAUyB,EAAOzB,QAAU,GAC/C+C,MAAOvB,EAAQxB,SAAWgD,QAAQvB,EAAOzB,SACzCiD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAGXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,WACHxD,MAAM,WACNyE,KAAK,WACL1E,MAAO6B,EAAOd,SACd2C,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQvB,SAAWwB,EAAOxB,SAAW,GACjD8C,MAAOvB,EAAQvB,UAAY+C,QAAQvB,EAAOxB,UAC1CgD,OAAO,QACPR,QAAQ,WACRS,WAAS,IAEXpB,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,kBACHxD,MAAM,mBACNyE,KAAK,WACL1E,MAAO6B,EAAOb,gBACd0C,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQtB,gBAAkBuB,EAAOvB,gBAAkB,GAC/D6C,MAAOvB,EAAQtB,iBAAmB8C,QAAQvB,EAAOvB,iBACjD+C,OAAO,QACPR,QAAQ,WACRS,WAAS,IAEXpB,EAAAC,EAAAC,cAACO,EAAA,EAAD,iCACAT,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CACEY,GAAG,aACHiB,KAAK,OACLC,WAAY,CAAEC,kBAAkB,EAAMC,OAAQ,WAC9CnB,SAAUjB,EACVkB,OAAQjB,EACRkB,WAAYtB,EAAQrB,WAAasB,EAAOtB,WAAa,GACrD4C,MAAOvB,EAAQrB,YAAc6C,QAAQvB,EAAOtB,YAC5C8C,OAAO,QACPC,WAAS,KAGbpB,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAaE,UAAWV,EAAQ0C,SAC9BnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAQ6B,KAAK,SAASO,MAAM,UAAU1B,QAAQ,YAAY2B,SAAU1C,GAApE,UAGAI,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAQoC,MAAM,YAAY1B,QAAQ,YAAY4B,QAASxC,GAAvD,eAwEGyC,uBAvQA,iBAAO,CACpBjC,KAAM,CACJkC,SAAU,IACVC,UAAW,IAEbtC,UAAW,CACTuC,QAAS,OACTC,eAAgB,UAElBT,QAAS,CACPU,MAAO,WA6PIL,CAAmBhF,GCvQnBsF,MATf,WAEE,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6C,EAAD,QCIc7B,QACW,cAA7B8B,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrD,EAAAC,EAAAC,cAACoD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d9071726.chunk.js","sourcesContent":["export const CountryCode = [\r\n  {\r\n    value: 'Andorra', label: 'Andorra', phone: '376', state: [\r\n      { label: 'SantJuliadeLoria', value: 'SantJuliadeLoria' },\r\n      { label: 'Ordino', value: 'Ordino' },\r\n      { label: 'LaMassana', value: 'LaMassana' },\r\n      { label: 'Encamp', value: 'Encamp' },\r\n      { label: 'Canillo', value: 'Canillo' },\r\n      { label: 'AndorralaVella', value: 'AndorralaVella' },\r\n      { label: 'Escaldes-Engordany', value: 'Escaldes-Engordany' }\r\n    ]\r\n  },\r\n  {\r\n    value: 'UnitedArabEmirates', label: 'UnitedArabEmirates', phone: '971',\r\n    state: [\r\n      { label: 'Dubai', value: 'Dubai' },\r\n      { label: 'AbuDhabi', value: 'AbuDhabi' },\r\n      { label: 'Sharjah', value: 'Sharjah' },\r\n      { label: 'Ajman', value: 'Ajman' },\r\n      { label: 'RasAlKhaimah', value: 'RasAlKhaimah' },\r\n      { label: 'Fujairah', value: 'Fujairah' },\r\n      { label: 'UmmAlQuwain', value: 'UmmAlQuwain' }\r\n    ]\r\n  },\r\n  {\r\n    value: 'Afghanistan', label: 'Afghanistan', phone: '93',\r\n    state: [\r\n      { label: 'SantJuliadeLoria', value: 'SantJuliadeLoria' },\r\n      { label: 'Ordino', value: 'Ordino' },\r\n      { label: 'LaMassana', value: 'LaMassana' },\r\n      { label: 'Encamp', value: 'Encamp' },\r\n      { label: 'Canillo', value: 'Canillo' },\r\n      { label: 'AndorralaVella', value: 'AndorralaVella' },\r\n      { label: 'Escaldes-Engordany', value: 'Escaldes-Engordany' }\r\n    ]\r\n  },\r\n  {\r\n    value: 'AntiguaandBarbuda', label: 'AntiguaandBarbuda', phone: '1-268',\r\n    state: [\r\n      { label: 'Dubai', value: 'Dubai' },\r\n      { label: 'AbuDhabi', value: 'AbuDhabi' },\r\n      { label: 'Sharjah', value: 'Sharjah' },\r\n      { label: 'Ajman', value: 'Ajman' },\r\n      { label: 'RasAlKhaimah', value: 'RasAlKhaimah' },\r\n      { label: 'Fujairah', value: 'Fujairah' },\r\n      { label: 'UmmAlQuwain', value: 'UmmAlQuwain' }\r\n    ]\r\n  }\r\n];","import React from 'react';\nimport { withFormik } from 'formik';\nimport Yup from 'yup';\nimport { Avatar, Input, Typography, withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { CountryCode } from './CountryCode';\n\nconst styles = () => ({\n  card: {\n    maxWidth: 420,\n    marginTop: 50\n  },\n  container: {\n    display: 'Flex',\n    justifyContent: 'center'\n  },\n  actions: {\n    float: 'right'\n  }\n});\n\n\nconst form = props =>\n{\n  const {\n    classes,\n    values,\n    touched,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleReset\n  } = props;\n\n  return (\n    <div className={classes.container}>\n      <form onSubmit={handleSubmit}>\n        <Card className={classes.card}>\n          <CardContent>\n\n            <Typography component=\"h1\" variant=\"h5\">\n              Registration        </Typography>\n            <TextField\n              id='userName'\n              label='User Name'\n              value={values.userName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.userName ? errors.userName : ''}\n              error={touched.userName && Boolean(errors.userName)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n            <TextField\n              id='firstName'\n              label='First Name'\n              value={values.firstName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.firstName ? errors.firstName : ''}\n              error={touched.firstName && Boolean(errors.firstName)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n            <TextField\n              id='lastName'\n              label='Last Name'\n              value={values.lastName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.lastName ? errors.lastName : ''}\n              error={touched.lastName && Boolean(errors.lastName)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n            <TextField\n              id='address1'\n              label='Address line 1'\n              value={values.address1}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.address1 ? errors.address1 : ''}\n              error={touched.address1 && Boolean(errors.address1)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n            <TextField\n              id='address2'\n              label='Address line2'\n              value={values.address2}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.address2 ? errors.address2 : ''}\n              error={touched.address2 && Boolean(errors.address2)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n\n            <TextField\n              select\n              id='country'\n              label='Country'\n              value={values.country}\n              onChange={handleChange('country')}\n              helperText={touched.country ? errors.country : ''}\n              error={touched.country && Boolean(errors.country)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            >\n              {console.log(values.country)}\n              {CountryCode.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              select\n              id='state'\n              label='State'\n              value={values.state}\n              onChange={handleChange('state')}\n              helperText={touched.state ? errors.state : ''}\n              error={touched.state && Boolean(errors.state)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            >\n              {values.country && values.country !== '' && CountryCode.find((item) => item.value === values.country).state.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              id='pincode'\n              label='PinCode'\n              value={values.pincode}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.pincode ? errors.pincode : ''}\n              error={touched.pincode && Boolean(errors.pincode)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n\n            <TextField\n              id='password'\n              label='Password'\n              type='password'\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.password ? errors.password : ''}\n              error={touched.password && Boolean(errors.password)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n            <TextField\n              id='confirmPassword'\n              label='Confirm Password'\n              type='password'\n              value={values.confirmPassword}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.confirmPassword ? errors.confirmPassword : ''}\n              error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n              margin='dense'\n              variant='outlined'\n              fullWidth\n            />\n            <Typography>Choose a profile picture</Typography>\n            <TextField\n              id='profileimg'\n              type='file'\n              InputProps={{ disableUnderline: true, accept: 'image/*' }}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              helperText={touched.profileimg ? errors.profileimg : ''}\n              error={touched.profileimg && Boolean(errors.profileimg)}\n              margin='dense'\n              fullWidth\n            />\n          </CardContent>\n          <CardActions className={classes.actions}>\n            <Button type='submit' color='primary' variant=\"contained\" disabled={isSubmitting}>\n              SUBMIT\n            </Button>\n            <Button color='secondary' variant=\"contained\" onClick={handleReset}>\n              CLEAR\n            </Button>\n          </CardActions>\n        </Card>\n      </form>\n    </div>\n  );\n};\n\nconst Form = withFormik({\n  mapPropsToValues: ({\n    userName,\n    firstName,\n    lastName,\n    address1,\n    address2,\n    country,\n    state,\n    pincode,\n    password,\n    confirmPassword,\n    profileimg\n  }) =>\n  {\n    return {\n      userName: userName || '',\n      firstName: firstName || '',\n      lastName: lastName || '',\n      address1: address1 || '',\n      address2: address2 || '',\n      country: country || '',\n      state: state || '',\n      pincode: pincode || '',\n      password: password || '',\n      confirmPassword: confirmPassword || '',\n      profileimg: profileimg || '',\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    userName: Yup.string().required('Required'),\n    firstName: Yup.string().required('Required'),\n    lastName: Yup.string().required('Required'),\n    address1: Yup.string().required('Required'),\n    address2: Yup.string().required('Required'),\n    country: Yup.string().required('Select your Country '),\n    state: Yup.string().required('Select your State '),\n    pincode: Yup.string()\n      .min(6, 'Pincode must contain at least 6 characters')\n      .required('Enter your Pincode'),\n    password: Yup.string()\n      .min(8, 'Password must contain at least 8 characters')\n      .required('Enter your password'),\n    confirmPassword: Yup.string()\n      .required('Confirm your password')\n      .oneOf([Yup.ref('password')], 'Password does not match'),\n    profileimg: Yup.mixed().required()\n\n  }),\n\n  handleSubmit: (values, { setSubmitting }) =>\n  {\n    setTimeout(() =>\n    {\n      // submit to the server\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  }\n})(form);\n\nexport default withStyles(styles)(Form);\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./containers/Form\";\n\nfunction App()\n{\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}